{"version":3,"sources":["img/donutlogo.png","img/donutlogoB.png","img/donutlogoV.png","utils/setAuthToken.js","actions/authActions.js","actions/types.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","store.js","components/auth/Register.js","components/auth/Login.js","components/private-route/PrivateRoute.js","pages/About.js","pages/Welcome.js","components/layout/UserDetail.js","pages/Menu.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","isEmpty","require","initialState","isAuthenticated","user","loading","combineReducers","auth","state","arguments","length","undefined","action","Object","objectSpread","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","Register","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","e","setState","defineProperty","target","id","value","onSubmit","preventDefault","newUser","name","email","password","password2","props","registerUser","history","push","nextProps","react_default","a","createElement","className","Link","to","style","paddingLeft","noValidate","error","classnames","invalid","htmlFor","width","borderRadius","letterSpacing","marginTop","Component","connect","userData","post","then","res","catch","err","response","data","withRouter","Login","loginUser","emailnotfound","passwordincorrect","setItem","jwt_decode","_ref","component","rest","objectWithoutProperties","Route","assign","render","Redirect","About","src","Logo","Welcome","UserDetail","onLogoutClick","align","onClick","Menu","for","Logo2","Logo3","jwtToken","currentTime","Date","now","exp","location","href","App","es","BrowserRouter","layout_UserDetail","exact","path","Switch","private_route_PrivateRoute","Boolean","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d27db20b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/donutlogo.a5c92193.png\";","module.exports = __webpack_public_path__ + \"static/media/donutlogoB.7850e30f.png\";","module.exports = __webpack_public_path__ + \"static/media/donutlogoV.1aa5792b.png\";","import axios from \"axios\";\n\nconst setAuthToken = token => {\n  if (token) {\n    // Apply authorization token to every request if logged in\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    // Delete auth header\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setAuthToken;\n","import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\n\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from \"./types\";\n\n// Register User\nexport const registerUser = (userData, history) => dispatch => {\n  axios\n    .post(\"/api/users/register\", userData)\n    .then(res => history.push(\"/login\"))\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Login - get user token\nexport const loginUser = userData => dispatch => {\n  axios\n    .post(\"/api/users/login\", userData)\n    .then(res => {\n      // Save to localStorage\n\n      // Set token to localStorage\n      const { token } = res.data;\n      localStorage.setItem(\"jwtToken\", token);\n      // Set token to Auth header\n      setAuthToken(token);\n      // Decode token to get user data\n      const decoded = jwt_decode(token);\n      // Set current user\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Set logged in user\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n\n// User loading\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n};\n\n// Log user out\nexport const logoutUser = () => dispatch => {\n  // Remove token from local storage\n  localStorage.removeItem(\"jwtToken\");\n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to empty object {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n};\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n","import { SET_CURRENT_USER, USER_LOADING } from \"../actions/types\";\n\nconst isEmpty = require(\"is-empty\");\n\nconst initialState = {\n  isAuthenticated: false,\n  user: {},\n  loading: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        user: action.payload\n      };\n    case USER_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    default:\n      return state;\n  }\n}\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducer\";\nimport errorReducer from \"./errorReducer\";\n\nexport default combineReducers({\n  auth: authReducer,\n  errors: errorReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n      window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()) ||\n      compose\n  )\n);\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Register page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const newUser = {\n      name: this.state.name,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2\n    };\n\n    this.props.registerUser(newUser, this.props.history);\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col s8 offset-s2\">\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\n              <i className=\"material-icons left\">keyboard_backspace</i> Back to\n              home\n            </Link>\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              <h4>\n                <b>Register</b> below\n              </h4>\n              <p className=\"grey-text text-darken-1\">\n                Already have an account? <Link to=\"/login\">Log in</Link>\n              </p>\n            </div>\n            <form noValidate onSubmit={this.onSubmit}>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.name}\n                  error={errors.name}\n                  id=\"name\"\n                  type=\"text\"\n                  className={classnames(\"\", {\n                    invalid: errors.name\n                  })}\n                />\n                <label htmlFor=\"name\">Name</label>\n                <span className=\"red-text\">{errors.name}</span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email\n                  })}\n                />\n                <label htmlFor=\"email\">Email</label>\n                <span className=\"red-text\">{errors.email}</span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password\n                  })}\n                />\n                <label htmlFor=\"password\">Password</label>\n                <span className=\"red-text\">{errors.password}</span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password2}\n                  error={errors.password2}\n                  id=\"password2\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password2\n                  })}\n                />\n                <label htmlFor=\"password2\">Confirm Password</label>\n                <span className=\"red-text\">{errors.password2}</span>\n              </div>\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <button\n                  style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\"\n                  }}\n                  type=\"submit\"\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                >\n                  Sign up\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { registerUser }\n)(withRouter(Register));\n","import React, { Component } from \"react\";\nimport '../../App.css';\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/menu\");\n      //this.props.history.push(\"/userdetail\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/menu\");\n      //this.props.history.push(\"/userdetail\");\n    }\n\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const userData = {\n      email: this.state.email,\n      password: this.state.password\n    };\n\n    this.props.loginUser(userData);\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div style={{ marginTop: \"4rem\" }} className=\"row\">\n          <div className=\"col s8 offset-s2\">\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\n              <i className=\"material-icons left\">keyboard_backspace</i> Back to\n              home\n            </Link>\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              <h4>\n                <b>Login</b> below\n              </h4>\n              <p className=\"grey-text text-darken-1\">\n                Don't have an account? <Link to=\"/register\">Register</Link>\n              </p>\n            </div>\n            <form noValidate onSubmit={this.onSubmit}>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email || errors.emailnotfound\n                  })}\n                />\n                <label htmlFor=\"email\">Email</label>\n                <span className=\"red-text\">\n                  {errors.email}\n                  {errors.emailnotfound}\n                </span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password || errors.passwordincorrect\n                  })}\n                />\n                <label htmlFor=\"password\">Password</label>\n                <span className=\"red-text\">\n                  {errors.password}\n                  {errors.passwordincorrect}\n                </span>\n              </div>\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <button\n                  style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\"\n                  }}\n                  type=\"submit\"\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                >\n                  Login\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { loginUser }\n)(Login);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      auth.isAuthenticated === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from 'react';\r\nimport '../App.css';\r\nimport Logo from '../img/donutlogo.png';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction About(){\r\n    return(\r\n        \r\n        <div className=\"container-about\">\r\n            <img src={Logo} className=\"App-logo-small\" />\r\n            \r\n            <h2>Developer</h2>\r\n           \r\n            <h5>Chinnakrit Ngeonsom 610610577</h5>\r\n        \r\n            <h5>Titaya Jitpang 610610579</h5>\r\n            \r\n            <h5>Samita Kedkaew 6106106620</h5>\r\n\r\n            <p className=\"forgot-password text-right\">\r\n            Ready to order? <li><Link to=\"/\">ORDER NOW</Link></li>\r\n        </p>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport '../App.css';\r\nimport Logo from '../img/donutlogo.png';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Welcome(){\r\n    return(\r\n        \r\n        <div className=\"container\">\r\n            <img src={Logo} className=\"App-logo\" />\r\n            \r\n            <ul className=\"App-link\">\r\n                    <li><Link to=\"/login\">Login</Link></li>\r\n                    <li><Link to=\"/register\">Register</Link></li>\r\n                    <li><Link to=\"/about\">About</Link></li>\r\n\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Welcome;","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../actions/authActions\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass UserDetail extends Component {\r\n    onLogoutClick = e => {\r\n      e.preventDefault();\r\n      this.props.logoutUser();\r\n    };\r\n  \r\n    render() {\r\n      const { user } = this.props.auth;\r\n  \r\n      return (\r\n            <div className=\"navbar-fixed\">\r\n                <nav className=\"z-depth-0\">\r\n                    <div className=\"nav-wrapper\" align=\"right\">\r\n                        <h7>\r\n                            Name : <b>{user.name}</b>\r\n                        </h7>\r\n                        <button\r\n                        onClick={this.onLogoutClick}\r\n                        className=\"btn waves-effect waves-light hoverable blue accent-3\"\r\n                        \r\n                        >\r\n                        Logout\r\n                        </button>\r\n                    </div>\r\n            </nav>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  UserDetail.propTypes = {\r\n    logoutUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n  };\r\n  \r\n  const mapStateToProps = state => ({\r\n    auth: state.auth\r\n  });\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    { logoutUser }\r\n  )(UserDetail);","import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport Logo from '../img/donutlogo.png';\r\nimport Logo2 from '../img/donutlogoB.png';\r\nimport Logo3 from '../img/donutlogoV.png';\r\nimport UserDetail from '../components/layout/UserDetail';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Menu extends Component{\r\n    render(){\r\n        return(\r\n        <form className=\"menu\">\r\n        <img src='https://donutshop.herokuapp.com/img/donutlogo.png' className=\"App-logo-small\" />\r\n        <div className=\"split left\">\r\n        <h3>Menu</h3>\r\n            <h4><button type=\"submit\" className=\"button\" value=\"strawberry\">add</button>\r\n            <img src={Logo} className=\"App-logo-small\" />\r\n            <lable for=\"pinkgaze\">Strawberry Donut</lable>\r\n            <lable for=\"price\"> 25B</lable></h4>\r\n            <h4><button type=\"submit\" className=\"button\" value=\"blueberry\">add</button>\r\n            <img src={Logo2} className=\"App-logo-small\" />\r\n            <lable for=\"bluegaze\">Bluebery Donut</lable>\r\n            <lable for=\"price\"> 25B</lable></h4>\r\n            <h4><button type=\"submit\" className=\"button\" value=\"vanilla\">add</button>\r\n            <img src={Logo3} className=\"App-logo-small\" />\r\n            <lable for=\"creamgaze\">Vanilla Donut</lable>\r\n            <lable for=\"price\"> 25B</lable></h4>\r\n        </div>\r\n\r\n\r\n        <div className=\"split right\">\r\n        <h4>Order</h4>\r\n        <table className=\"table-order\" align=\"center\" >\r\n        <tr>\r\n            <th>Menu</th>\r\n            <th>Price</th>\r\n            </tr>\r\n            <tr>\r\n                <td>menu</td>\r\n                <td>price</td>\r\n                </tr>\r\n                <tr>\r\n            <td>menu</td>\r\n            <td>price</td>\r\n            </tr>\r\n            </table>\r\n        </div>   \r\n\r\n        </form>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Menu;","import React, { Component } from \"react\";\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\n\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\n\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\n\nimport About from \"./pages/About\";\nimport Welcome from \"./pages/Welcome\";\nimport Menu from \"./pages/Menu\";\nimport UserDetail from \"./components/layout/UserDetail\"\n\nimport \"./App.css\";\n\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n  // Check for expired token\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n\n    // Redirect to login\n    window.location.href = \"./login\";\n  }\n}\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <UserDetail />\n            <Route exact path=\"/\" component={Welcome} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/about\" component={About} />\n\n            <Switch>\n              <PrivateRoute exact path=\"/menu\" component={Menu} />\n              <PrivateRoute exact path=\"/userdetail\" component={UserDetail} />\n\n\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}